# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Code Coverage Actions

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'api/**'
#       - 'web/**'

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'web/**'

jobs:
  generate-api-code-coverage-badge:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=\"cobertura,opencover\" -p:ExcludeByFile=\"**/*.cshtml\" --no-build --verbosity normal Tests/SpotifyPlaylistJanitorAPI.Tests/
    - name: Create Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: API Test Coverage
        color: brightgreen
        path: api/Tests/SpotifyPlaylistJanitorAPI.Tests/TestResults/coverage.opencover.xml
        gist-filename: api-code-coverage.json
        gist-id: ${{ vars.API_GIST_ID }}
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}

  generate-web-code-coverage-badge:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    # - name: Test
    #   run: npm run coverage
    - name: Get Coverage for badge
      run: |
        SUMMARY="$(npm run coverage-badge | tail -2 | head -1)"
        TOKENS=($SUMMARY)
        echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV
    - name: Create Awesome Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_AUTH_TOKEN }}
        gistID: ${{ vars.WEB_GIST_ID }}
        filename: web-code-coverage.json
        label: Web Test Coverage
        message: ${{ env.COVERAGE }}
        color: brightgreen
    # - name: Create Test Coverage Badge
    #   uses: simon-k/dotnet-code-coverage-badge@v1.0.0
    #   id: create_coverage_badge
    #   with:
    #     label: Web Test Coverage
    #     color: brightgreen
    #     path: web/coverage/cobertura-coverage.xml
    #     gist-filename: web-code-coverage.json
    #     gist-id: ${{ vars.WEB_GIST_ID }}
    #     gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}
